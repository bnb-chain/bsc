package impl

import (
	"encoding/hex"
	"errors"

	"github.com/holiman/uint256"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/common/hexutil"
	"github.com/ethereum/go-ethereum/core/opcodeCompiler/shortcut"
)

func init() {
	impl := new(ShortcutImpl55D398326F99059FF775485246999027B3197955)
	shortcut.RegisterShortcut(impl.Contract(), impl)
}

type ShortcutImpl55D398326F99059FF775485246999027B3197955 struct {
}

func (s *ShortcutImpl55D398326F99059FF775485246999027B3197955) Contract() common.Address {
	return common.HexToAddress("0x55d398326f99059fF775485246999027B3197955")
}

func (s *ShortcutImpl55D398326F99059FF775485246999027B3197955) Shortcut(inputs []byte, origin, caller common.Address, value *uint256.Int) (shortcutPc uint64, gasUsed uint64, stack []uint256.Int, mem []byte, expected bool, err error) {
	// 入参分析 TODO: 目前还是人工分析，后续想办法自动化生成，还是有点难度的
	if !value.IsZero() {
		return 0, 0, nil, nil, false, errors.New("value is not zero")
	}
	if len(inputs) < 4 {
		return 0, 0, nil, nil, false, errors.New("call data length < 4")
	}

	selector := hex.EncodeToString(inputs[:4])
	switch selector {
	case "0xa0712d68":
		// 函数: 0xa0712d68
		// 预估Gas消耗: 208
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 785, 208,
			[]uint256.Int{
				{2691771752, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x32424aa3":
		// 函数: 0x32424aa3
		// 预估Gas消耗: 142
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 604, 142,
			[]uint256.Int{
				{843205283, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x42966c68":
		// 函数: 0x42966c68
		// 预估Gas消耗: 186
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 656, 186,
			[]uint256.Int{
				{1117154408, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x715018a6":
		// 函数: 0x715018a6
		// 预估Gas消耗: 230
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 723, 230,
			[]uint256.Int{
				{1901074598, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x06fdde03":
		// 函数: 0x06fdde03
		// 预估Gas消耗: 143
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 305, 143,
			[]uint256.Int{
				{117300739, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x095ea7b3":
		// 函数: 0x095ea7b3
		// 预估Gas消耗: 165
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 430, 165,
			[]uint256.Int{
				{157198259, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0xb09f1266":
		// 函数: 0xb09f1266
		// 预估Gas消耗: 163
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 902, 163,
			[]uint256.Int{
				{2963214950, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0xf2fde38b":
		// 函数: 0xf2fde38b
		// 预估Gas消耗: 229
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 964, 229,
			[]uint256.Int{
				{4076725131, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x893d20e8":
		// 函数: 0x893d20e8
		// 预估Gas消耗: 142
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 733, 142,
			[]uint256.Int{
				{2302484712, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x95d89b41":
		// 函数: 0x95d89b41
		// 预估Gas消耗: 186
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 777, 186,
			[]uint256.Int{
				{2514000705, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x313ce567":
		// 函数: 0x313ce567
		// 预估Gas消耗: 231
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 574, 231,
			[]uint256.Int{
				{826074471, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x70a08231":
		// 函数: 0x70a08231
		// 预估Gas消耗: 208
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 685, 208,
			[]uint256.Int{
				{1889567281, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0xa9059cbb":
		// 函数: 0xa9059cbb
		// 预估Gas消耗: 141
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 858, 141,
			[]uint256.Int{
				{2835717307, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0xd28d8852":
		// 函数: 0xd28d8852
		// 预估Gas消耗: 185
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 910, 185,
			[]uint256.Int{
				{3532490834, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x8da5cb5b":
		// 函数: 0x8da5cb5b
		// 预估Gas消耗: 164
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 769, 164,
			[]uint256.Int{
				{2376452955, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x39509351":
		// 函数: 0x39509351
		// 预估Gas消耗: 164
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 612, 164,
			[]uint256.Int{
				{961581905, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0xa457c2d7":
		// 函数: 0xa457c2d7
		// 预估Gas消耗: 230
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 814, 230,
			[]uint256.Int{
				{2757214935, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x18160ddd":
		// 函数: 0x18160ddd
		// 预估Gas消耗: 187
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 494, 187,
			[]uint256.Int{
				{404098525, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0x23b872dd":
		// 函数: 0x23b872dd
		// 预估Gas消耗: 209
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 520, 209,
			[]uint256.Int{
				{599290589, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	case "0xdd62ed3e":
		// 函数: 0xdd62ed3e
		// 预估Gas消耗: 207
		// 栈操作: []
		// 内存操作: []
		// 存储操作: []
		return 918, 207,
			[]uint256.Int{
				{3714247998, 0, 0, 0},
			},
			hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"), true, nil
	default:
		return 0, 0, nil, nil, false, nil
	}
}
